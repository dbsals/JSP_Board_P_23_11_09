/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.15
 * Generated at: 2023-11-30 10:48:50 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.article;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import ym.jsp.board.dto.Article;
import java.util.List;
import java.util.Map;

public final class detail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/article/../part/head.jspf", Long.valueOf(1701168435139L));
    _jspx_dependants.put("/WEB-INF/article/../part/foot.jspf", Long.valueOf(1701168233283L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.util.Map");
    _jspx_imports_classes.add("ym.jsp.board.dto.Article");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

  Article article = (Article) request.getAttribute("article");

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

Map<String, Object> loginedMemberRow = (Map<String, Object>) request.getAttribute("loginedMemberRow");
boolean isLogined = (boolean) request.getAttribute("isLogined");
int loginedMemberId = (int) request.getAttribute("loginedMemberId");

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!doctype html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("  <meta charset=\"UTF-8\">\r\n");
      out.write("\r\n");
      out.write("  <!-- 모바일에서 디자인이 축소되지 않게 하기 위한 코드 -->\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\">\r\n");
      out.write("  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\r\n");
      out.write("  <title>커뮤니티 게시판</title>\r\n");
      out.write("\r\n");
      out.write("  <!-- 제이쿼리 불러오기 -->\r\n");
      out.write("  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("  <!-- 폰트어썸 불러오기 -->\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css\">\r\n");
      out.write("\r\n");
      out.write("  <!-- 데이지 UI 불러오기 -->\r\n");
      out.write("  <link href=\"https://cdn.jsdelivr.net/npm/daisyui@4.4.12/dist/full.min.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n");
      out.write("\r\n");
      out.write("  <!-- 테일윈드 불러오기 -->\r\n");
      out.write("  <script src=\"https://cdn.tailwindcss.com\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<!-- 공통 css -->\r\n");
      out.write("<style>\r\n");
      out.write("  @font-face {\r\n");
      out.write("    font-family: 'GmarketSansMedium';\r\n");
      out.write("    src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_2001@1.1/GmarketSansMedium.woff') format('woff');\r\n");
      out.write("    font-weight: normal;\r\n");
      out.write("    font-style: normal;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  html > body {\r\n");
      out.write("    font-family: 'GmarketSansMedium';\r\n");
      out.write("  }\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<header class=\"top-bar\">\r\n");
      out.write("  ");
 if(isLogined) { 
      out.write("\r\n");
      out.write("  <div>\r\n");
      out.write("    \"");
      out.print(loginedMemberRow.get("name"));
      out.write("\" 님 환영합니다.\r\n");
      out.write("  </div>\r\n");
      out.write("  ");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("  <nav class=\"menu-box-1\">\r\n");
      out.write("    <ul style=\"display:flex; gap: 0 10px\">\r\n");
      out.write("      <li><a href=\"/usr/article/list\">게시물 리스트</a></li>\r\n");
      out.write("      <li><a href=\"/usr/member/join\">회원가입</a></li>\r\n");
      out.write("      ");
 if(!isLogined) { 
      out.write("\r\n");
      out.write("      <li><a href=\"/usr/member/login\">로그인</a></li>\r\n");
      out.write("      ");
 } 
      out.write("\r\n");
      out.write("      ");
 if(isLogined) { 
      out.write("\r\n");
      out.write("      <li><a href=\"/usr/member/doLogout\">로그아웃</a></li>\r\n");
      out.write("      ");
 } 
      out.write("\r\n");
      out.write("    </ul>\r\n");
      out.write("  </nav>\r\n");
      out.write("</header>");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("  .section {\r\n");
      out.write("    display: flex;\r\n");
      out.write("    justify-content: center;\r\n");
      out.write("  }\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<section class=\"section\">\r\n");
      out.write("  <div class=\"con\">\r\n");
      out.write("    <h1>게시물 상세보기</h1>\r\n");
      out.write("\r\n");
      out.write("    <table border=\"1\" style=\"border-collapse: collapse; text-align:center;\">\r\n");
      out.write("      <colgroup>\r\n");
      out.write("        <col width=\"50\">\r\n");
      out.write("        <col width=\"200\">\r\n");
      out.write("        <col width=\"200\">\r\n");
      out.write("        <col width=\"200\">\r\n");
      out.write("        <col width=\"200\">\r\n");
      out.write("        <col width=\"150\">\r\n");
      out.write("      </colgroup>\r\n");
      out.write("      <thead>\r\n");
      out.write("      <tr>\r\n");
      out.write("        <th>번호</th>\r\n");
      out.write("        <th>작성날짜</th>\r\n");
      out.write("        <th>수정날짜</th>\r\n");
      out.write("        <th>제목</th>\r\n");
      out.write("        <th>내용</th>\r\n");
      out.write("        <th>작성자</th>\r\n");
      out.write("      </tr>\r\n");
      out.write("      </thead>\r\n");
      out.write("      <tbody>\r\n");
      out.write("      <tr>\r\n");
      out.write("        <td>");
      out.print( article.getId() );
      out.write("</td>\r\n");
      out.write("        <td>");
      out.print( article.getRegDate() );
      out.write("</td>\r\n");
      out.write("        <td>");
      out.print( article.getUpdateDate() );
      out.write("</td>\r\n");
      out.write("        <td>");
      out.print( article.getTitle() );
      out.write("</td>\r\n");
      out.write("        <td>");
      out.print( article.getContent() );
      out.write("</td>\r\n");
      out.write("        <td>");
      out.print( article.getExtra__writerName() );
      out.write("</td>\r\n");
      out.write("      </tr>\r\n");
      out.write("      </tbody>\r\n");
      out.write("    </table>\r\n");
      out.write("    <div class=\"btn-group\">\r\n");
      out.write("      <a href=\"list\">리스트</a>\r\n");
      out.write("      &nbsp;\r\n");
      out.write("      <a href=\"doDelete?id=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.id}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">삭제</a>\r\n");
      out.write("      &nbsp;\r\n");
      out.write("      <a href=\"modify?id=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.id}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">수정</a>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("</section>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
